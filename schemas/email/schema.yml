name: email
description: |
 Email and Mailing lists

 This module sends the following signals:
  - email/alias
  - email/list
  - email/mailbox
  - email/redirection

dependencies:
 - dns

priv_all_all:
 - system
priv_usage:
 - userlogin
 - backend

exec_post_install_and_upgrade: |
 SELECT system._setup_register_service('email', 'email');
 SELECT system._setup_register_subservice('email', 'mailbox');
 SELECT system._setup_register_subservice('email', 'alias');
 SELECT system._setup_register_subservice('email', 'redirection');
 SELECT system._setup_register_subservice('email', 'list');
 SELECT system._setup_register_subservice('email', 'dns_activatable');

function_templates:
 -
  template: insert
  description: does the contingent checks
  variables:
   -
    name: v_num_total
    type: int
   -
    name: v_num_domain
    type: int
  body_prelude: |
    PERFORM email._address_valid(p_localpart, p_domain);

    v_num_total := (SELECT COUNT(*) FROM email._address() AS t WHERE t.owner=v_owner AND t.subservice=v_subservice);
    v_num_domain := (SELECT COUNT(*) FROM email._address() AS t WHERE t.owner=v_owner AND t.subservice=v_subservice AND t.domain = p_domain);

    PERFORM system._contingent_ensure(
        p_owner:=v_owner,
        p_domain:=p_domain,
        p_service:='email',
        p_subservice:=v_subservice,
        p_current_quantity_total:=v_num_total,
        p_current_quantity_domain:=v_num_domain);

domains:
 -
  name: t_localpart
  description: Local part of an email address, the thing in front of the @
  type: varchar(64)

  checks:
   -
    name: valid_characters
    description: Only allow lower-case addresses
    check: VALUE ~ '^[a-z0-9.\-]+$'
   -
    name: no_starting_dot
    description: b
    check: left(VALUE, 1) <> '.'
   -
    name: no_ending_dot
    description: c
    check: right(VALUE, 1) <> '.'

 -
  name: t_address
  description: |
      Email address

      .. todo:: validity checks
  type: varchar(253)

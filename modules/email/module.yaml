name: email
description: "E-Mail and Mailing lists âœ‰"
dependencies: [ domains ]

exec_post_install: |
 SELECT system._setup_register_service('email', 'email');
 SELECT system._setup_register_service('email', 'email__list');

function_templates:
 -
  template: insert
  description: does the contingent checks
  body_prelude: |
    v_num_total := (SELECT COUNT(*) FROM email._address() AS t WHERE t.owner=v_owner);
    v_num_domain := (SELECT COUNT(*) FROM email._address() AS t WHERE t.owner=v_owner AND t.domain = p_domain);

    PERFORM "user"._contingent_exceeded(
        p_user:=v_owner,
        p_domain:=p_domain, 
        p_service:='email',
        p_current_quantity_total:=v_num_total,
        p_current_quantity_domain:=v_num_domain);

column_templates:
 -
  template: name
  name: name
  type: dns.t_domain
  description: Name like sub.example.org. This defines to which name the resource record pertains.
 -
  template: type
  name: type
  type: dns.t_type
  description: Type (?) like MX, A, AAAA, ...

table_templates:
 -
  template: address
  description: Address

  columns:
   -
    name: service
    type: commons.t_key
    description: strange thing
    checks:
     -
      name: service type
      description: ensures that service type is email
      check: VALUE == 'email'
    default: "'email'"
   -
    name: localpart
    type: email.t_localpart
    description: Local part of the address

domains:
 -
  name: t_localpart
  description: Local part of an e-mail address, the thing in front of the @
  type: varchar(64)
  
  checks:
   -
    name: valid_characters
    description: a
    check: "VALUE ~ '[A-Za-z0-9.]'"
    #check: "regexp_matches(VALUE, '[A-Za-z0-9.!#$%&'*+-/=?^_`{|}~]+')"
   -
    name: no_starting_dot
    description: b
    check: left(VALUE, 1) <> '.'
   -
    name: no_ending_dot
    description: c
    check: right(VALUE, 1) <> '.'

